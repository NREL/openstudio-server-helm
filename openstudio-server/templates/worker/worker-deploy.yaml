apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.worker.name   }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.worker.name }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.worker.name }}
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - worker-group
      containers:
        - name: {{ .Values.worker.container.name   }}
          image: {{ .Values.worker.container.image   }}
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                # This command checks to see if there is a running openstudio process and resque 'ruby' process.
                # idle state should only have 1 ruby proc and 0 openstudio proc.
                command: ['/bin/sh','-c', 'pkill -3 -f resque;  while [ $(eval "pgrep -c ruby") -gt 1 ] || [ $(eval "pgrep -c openstudio") -gt 0 ]  ; do sleep 5;  done; pkill -P 1;']
          resources:
            requests:
              cpu:  {{  .Values.worker.container.resources.requests.cpu  }}
              memory:  {{  .Values.worker.container.resources.requests.memory  }}
          volumeMounts:
            - name: osdata-worker
              mountPath: "/mnt/openstudio"
          env:
            - name:  QUEUES
              value: simulations
            - name:  COUNT
              value: "1"
            - name: SECRET_KEY_BASE
              value: {{ .Values.web.secret_key_value }}
            - name: REDIS_URL
              value: {{ .Values.redis_svc.url  }}
            - name: MONGO_USER
              value: {{ .Values.db.username }}
            - name: MONGO_PASSWORD
              value: {{ .Values.db.password }}
          command: ["/usr/local/bin/start-workers"]
      terminationGracePeriodSeconds: {{ .Values.worker.container.terminationGracePeriodSeconds }} # for long openstudio jobs.
      priorityClassName: low-priority
      volumes:
        - name: osdata-worker
          emptyDir: {}
