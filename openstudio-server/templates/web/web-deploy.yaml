apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.web.name  }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.web.name  }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.web.name  }}
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - web-group
      initContainers:
         - name: init-wait-for-db
           image: alpine
           command: ["/bin/sh", "-c", "for i in $(seq 1 300); do nc -zvw1 {{  .Values.db.name  }} {{ .Values.db.container.ports.db_port }} && exit 0 || sleep 3; done; exit 1"]
      containers:
        - name:  {{ .Values.web.container.name  }}
          image: {{ .Values.web.container.image  }}
          imagePullPolicy: Always
          resources:
            requests:
              cpu:  {{  .Values.web.container.resources.requests.cpu  }}
              memory:  {{  .Values.web.container.resources.requests.memory  }}
          ports:
            - containerPort: {{ .Values.web.container.port.http  }}
            - containerPort: {{ .Values.web.container.port.https  }}
          volumeMounts:
            - name: nfs
              mountPath: "/mnt/openstudio"
          env:
            - name: OS_SERVER_NUMBER_OF_WORKERS
              value: {{ .Values.rserve.number_of_workers | quote }}
            - name: QUEUES
              value: analysis_wrappers
            - name: SECRET_KEY_BASE
              value: {{ .Values.web.secret_key_value }}
            - name: REDIS_URL
              value: {{ .Values.redis_svc.url  }}
            - name: MONGO_USER
              value: {{ .Values.db.username }}
            - name: MONGO_PASSWORD
              value: {{ .Values.db.password }}
            - name: MAX_REQUESTS
              value: {{ (ceil (mulf .Values.worker_hpa.maxReplicas 1.05)) | quote }}
            - name: MAX_POOL
              value: {{ (ceil (divf (mulf (trimSuffix "Gi" .Values.web.container.resources.requests.memory) 1024 0.75) .Values.web.passenger_memory_per_process)) | quote }}
          command: ["bash", "-c", "/usr/local/bin/rails-entrypoint && /usr/local/bin/start-server"]
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 200
            timeoutSeconds: 120
            failureThreshold: 10
          livenessProbe:
            exec:
              command: ["grep", "-qs", "/mnt/openstudio ",  "/proc/mounts"]
            initialDelaySeconds: 5
            periodSeconds: 200
            timeoutSeconds: 120
            failureThreshold: 3
      priorityClassName: high-priority
      volumes:
       - name: nfs
         persistentVolumeClaim:
           claimName: nfs-pvc
